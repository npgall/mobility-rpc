<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.googlecode.mobilityrpc</groupId>
    <artifactId>mobility-rpc</artifactId>
    <version>0.5.1</version>
    <packaging>jar</packaging>
    <name>Mobility-RPC</name>
    <url>http://maven.apache.org</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile-protoc</id>
                        <!--
                            Ideally we would use maven-protoc-plugin to generate protobuf classes,
                            but that plugin is not in Maven Central.

                            We wish to deploy this library to Maven Central, and guidelines for doing so
                            forbid relying on dependencies which are not also in central:
                            https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide

                            Therefore we use antrun to invoke protoc as a workaround. Note: like maven-protoc-plugin,
                            this requires protoc to be installed on the machine, and be accessible via the 'protoc'
                            command.
                        -->
                        <phase>generate-sources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="target/generated-sources/protoc"/>
                                <!--<mkdir dir="target/generated-sources/com/googlecode/mobilityrpc/protobuf"/>-->
                                <path id="proto.path">
                                    <fileset dir="src/main/proto">
                                        <include name="**/*.proto" />
                                    </fileset>
                                </path>
                                <pathconvert pathsep=" " property="proto.files" refid="proto.path" />
                                <exec executable="protoc" failonerror="true">
                                    <arg value="--java_out=target/generated-sources/protoc" />
                                    <arg value="-I${project.basedir}/src/main/proto" />
                                    <!--suppress MavenModelInspection -->
                                    <arg line="${proto.files}" />
                                </exec>
                            </tasks>
                            <sourceRoot>target/generated-sources</sourceRoot>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
            </plugin>
            <plugin>
                <!--
                    *** Build an executable jar (for StandaloneMobilityServer) containing all dependencies ***
                    Builds a single executable by copying classes from all dependency jars directly into the main jar.
                    To prevent duplicate class issues, it relocates those classes to a new package within the jar:
                     com.googlecode.mobilityrpc.lib.*
                    It then updates the bytecode in all classes to refer to dependency classes in their new package.
                    Also this configures some transformers to merge open source licences present in any of the jars.
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <shadedArtifactAttached>true</shadedArtifactAttached>
                    <shadedClassifierName>all</shadedClassifierName>
                    <relocations>
                        <relocation>
                            <pattern>de</pattern>
                            <shadedPattern>com.googlecode.mobilityrpc.lib.de</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org</pattern>
                            <shadedPattern>com.googlecode.mobilityrpc.lib.org</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.google.protobuf</pattern>
                            <shadedPattern>com.googlecode.mobilityrpc.lib.com.google.protobuf</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.esotericsoftware</pattern>
                            <shadedPattern>com.googlecode.mobilityrpc.lib.com.esotericsoftware</shadedPattern>
                        </relocation>
                    </relocations>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                            <addHeader>false</addHeader>
                        </transformer>
                    </transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>com.googlecode.mobilityrpc.quickstart.StandaloneMobilityServer</Main-Class>
                  </manifestEntries>
                </transformer>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <!--suppress MavenModelInspection -->
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <version>1.10.b1</version>
                <configuration>
                    <header>src/etc/header.txt</header>
                    <excludes>
                        <exclude>src/main/proto/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode</groupId>
            <artifactId>kryo</artifactId>
            <version>1.04</version>
        </dependency>
        <dependency>
            <groupId>de.javakaffee</groupId>
            <artifactId>kryo-serializers</artifactId>
            <version>0.9</version>
        </dependency>
        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>2.4.1</version>
            <optional>false</optional>
        </dependency>
    </dependencies>
</project>
